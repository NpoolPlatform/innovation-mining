// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.18.1
// source: npool/innovation-minning.proto

package npool

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// request body and response
type VersionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info string `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *VersionResponse) Reset() {
	*x = VersionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_innovation_minning_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VersionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionResponse) ProtoMessage() {}

func (x *VersionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_innovation_minning_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionResponse.ProtoReflect.Descriptor instead.
func (*VersionResponse) Descriptor() ([]byte, []int) {
	return file_npool_innovation_minning_proto_rawDescGZIP(), []int{0}
}

func (x *VersionResponse) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID           string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
	FirstName    string `protobuf:"bytes,20,opt,name=FirstName,proto3" json:"FirstName,omitempty"`
	LastName     string `protobuf:"bytes,30,opt,name=LastName,proto3" json:"LastName,omitempty"`
	Introduction string `protobuf:"bytes,40,opt,name=Introduction,proto3" json:"Introduction,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_innovation_minning_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_npool_innovation_minning_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_npool_innovation_minning_proto_rawDescGZIP(), []int{1}
}

func (x *User) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *User) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *User) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *User) GetIntroduction() string {
	if x != nil {
		return x.Introduction
	}
	return ""
}

type CreateUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *User `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateUserRequest) Reset() {
	*x = CreateUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_innovation_minning_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserRequest) ProtoMessage() {}

func (x *CreateUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_innovation_minning_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserRequest.ProtoReflect.Descriptor instead.
func (*CreateUserRequest) Descriptor() ([]byte, []int) {
	return file_npool_innovation_minning_proto_rawDescGZIP(), []int{2}
}

func (x *CreateUserRequest) GetInfo() *User {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreateUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *User `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateUserResponse) Reset() {
	*x = CreateUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_innovation_minning_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserResponse) ProtoMessage() {}

func (x *CreateUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_innovation_minning_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserResponse.ProtoReflect.Descriptor instead.
func (*CreateUserResponse) Descriptor() ([]byte, []int) {
	return file_npool_innovation_minning_proto_rawDescGZIP(), []int{3}
}

func (x *CreateUserResponse) GetInfo() *User {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *User `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateUserRequest) Reset() {
	*x = UpdateUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_innovation_minning_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserRequest) ProtoMessage() {}

func (x *UpdateUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_innovation_minning_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserRequest) Descriptor() ([]byte, []int) {
	return file_npool_innovation_minning_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateUserRequest) GetInfo() *User {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *User `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateUserResponse) Reset() {
	*x = UpdateUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_innovation_minning_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserResponse) ProtoMessage() {}

func (x *UpdateUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_innovation_minning_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserResponse.ProtoReflect.Descriptor instead.
func (*UpdateUserResponse) Descriptor() ([]byte, []int) {
	return file_npool_innovation_minning_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateUserResponse) GetInfo() *User {
	if x != nil {
		return x.Info
	}
	return nil
}

type Team struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID        string   `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
	TeamName  string   `protobuf:"bytes,20,opt,name=TeamName,proto3" json:"TeamName,omitempty"`
	Logo      string   `protobuf:"bytes,30,opt,name=Logo,proto3" json:"Logo,omitempty"`
	LeaderID  string   `protobuf:"bytes,40,opt,name=LeaderID,proto3" json:"LeaderID,omitempty"`
	MemberIDs []string `protobuf:"bytes,50,rep,name=MemberIDs,proto3" json:"MemberIDs,omitempty"`
}

func (x *Team) Reset() {
	*x = Team{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_innovation_minning_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Team) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Team) ProtoMessage() {}

func (x *Team) ProtoReflect() protoreflect.Message {
	mi := &file_npool_innovation_minning_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Team.ProtoReflect.Descriptor instead.
func (*Team) Descriptor() ([]byte, []int) {
	return file_npool_innovation_minning_proto_rawDescGZIP(), []int{6}
}

func (x *Team) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Team) GetTeamName() string {
	if x != nil {
		return x.TeamName
	}
	return ""
}

func (x *Team) GetLogo() string {
	if x != nil {
		return x.Logo
	}
	return ""
}

func (x *Team) GetLeaderID() string {
	if x != nil {
		return x.LeaderID
	}
	return ""
}

func (x *Team) GetMemberIDs() []string {
	if x != nil {
		return x.MemberIDs
	}
	return nil
}

type CreateTeamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Team `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateTeamRequest) Reset() {
	*x = CreateTeamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_innovation_minning_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTeamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTeamRequest) ProtoMessage() {}

func (x *CreateTeamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_innovation_minning_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTeamRequest.ProtoReflect.Descriptor instead.
func (*CreateTeamRequest) Descriptor() ([]byte, []int) {
	return file_npool_innovation_minning_proto_rawDescGZIP(), []int{7}
}

func (x *CreateTeamRequest) GetInfo() *Team {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreateTeamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Team `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateTeamResponse) Reset() {
	*x = CreateTeamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_innovation_minning_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTeamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTeamResponse) ProtoMessage() {}

func (x *CreateTeamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_innovation_minning_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTeamResponse.ProtoReflect.Descriptor instead.
func (*CreateTeamResponse) Descriptor() ([]byte, []int) {
	return file_npool_innovation_minning_proto_rawDescGZIP(), []int{8}
}

func (x *CreateTeamResponse) GetInfo() *Team {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateTeamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Team `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateTeamRequest) Reset() {
	*x = UpdateTeamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_innovation_minning_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTeamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTeamRequest) ProtoMessage() {}

func (x *UpdateTeamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_innovation_minning_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTeamRequest.ProtoReflect.Descriptor instead.
func (*UpdateTeamRequest) Descriptor() ([]byte, []int) {
	return file_npool_innovation_minning_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateTeamRequest) GetInfo() *Team {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateTeamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Team `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateTeamResponse) Reset() {
	*x = UpdateTeamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_innovation_minning_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTeamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTeamResponse) ProtoMessage() {}

func (x *UpdateTeamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_innovation_minning_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTeamResponse.ProtoReflect.Descriptor instead.
func (*UpdateTeamResponse) Descriptor() ([]byte, []int) {
	return file_npool_innovation_minning_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateTeamResponse) GetInfo() *Team {
	if x != nil {
		return x.Info
	}
	return nil
}

type TechniqueAnalysis struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID        string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
	AuthorID  string `protobuf:"bytes,20,opt,name=AuthorID,proto3" json:"AuthorID,omitempty"`
	Title     string `protobuf:"bytes,30,opt,name=Title,proto3" json:"Title,omitempty"`
	Content   string `protobuf:"bytes,40,opt,name=Content,proto3" json:"Content,omitempty"`
	ProjectID string `protobuf:"bytes,50,opt,name=ProjectID,proto3" json:"ProjectID,omitempty"`
	CreateAt  uint32 `protobuf:"varint,60,opt,name=CreateAt,proto3" json:"CreateAt,omitempty"`
}

func (x *TechniqueAnalysis) Reset() {
	*x = TechniqueAnalysis{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_innovation_minning_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TechniqueAnalysis) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TechniqueAnalysis) ProtoMessage() {}

func (x *TechniqueAnalysis) ProtoReflect() protoreflect.Message {
	mi := &file_npool_innovation_minning_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TechniqueAnalysis.ProtoReflect.Descriptor instead.
func (*TechniqueAnalysis) Descriptor() ([]byte, []int) {
	return file_npool_innovation_minning_proto_rawDescGZIP(), []int{11}
}

func (x *TechniqueAnalysis) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *TechniqueAnalysis) GetAuthorID() string {
	if x != nil {
		return x.AuthorID
	}
	return ""
}

func (x *TechniqueAnalysis) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *TechniqueAnalysis) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *TechniqueAnalysis) GetProjectID() string {
	if x != nil {
		return x.ProjectID
	}
	return ""
}

func (x *TechniqueAnalysis) GetCreateAt() uint32 {
	if x != nil {
		return x.CreateAt
	}
	return 0
}

type CreateTechniqueAnalysisRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *TechniqueAnalysis `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateTechniqueAnalysisRequest) Reset() {
	*x = CreateTechniqueAnalysisRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_innovation_minning_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTechniqueAnalysisRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTechniqueAnalysisRequest) ProtoMessage() {}

func (x *CreateTechniqueAnalysisRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_innovation_minning_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTechniqueAnalysisRequest.ProtoReflect.Descriptor instead.
func (*CreateTechniqueAnalysisRequest) Descriptor() ([]byte, []int) {
	return file_npool_innovation_minning_proto_rawDescGZIP(), []int{12}
}

func (x *CreateTechniqueAnalysisRequest) GetInfo() *TechniqueAnalysis {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreateTechniqueAnalysisResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *TechniqueAnalysis `protobuf:"bytes,20,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateTechniqueAnalysisResponse) Reset() {
	*x = CreateTechniqueAnalysisResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_innovation_minning_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTechniqueAnalysisResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTechniqueAnalysisResponse) ProtoMessage() {}

func (x *CreateTechniqueAnalysisResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_innovation_minning_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTechniqueAnalysisResponse.ProtoReflect.Descriptor instead.
func (*CreateTechniqueAnalysisResponse) Descriptor() ([]byte, []int) {
	return file_npool_innovation_minning_proto_rawDescGZIP(), []int{13}
}

func (x *CreateTechniqueAnalysisResponse) GetInfo() *TechniqueAnalysis {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateTechniqueAnalysisRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *TechniqueAnalysis `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateTechniqueAnalysisRequest) Reset() {
	*x = UpdateTechniqueAnalysisRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_innovation_minning_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTechniqueAnalysisRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTechniqueAnalysisRequest) ProtoMessage() {}

func (x *UpdateTechniqueAnalysisRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_innovation_minning_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTechniqueAnalysisRequest.ProtoReflect.Descriptor instead.
func (*UpdateTechniqueAnalysisRequest) Descriptor() ([]byte, []int) {
	return file_npool_innovation_minning_proto_rawDescGZIP(), []int{14}
}

func (x *UpdateTechniqueAnalysisRequest) GetInfo() *TechniqueAnalysis {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateTechniqueAnalysisResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *TechniqueAnalysis `protobuf:"bytes,20,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateTechniqueAnalysisResponse) Reset() {
	*x = UpdateTechniqueAnalysisResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_innovation_minning_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTechniqueAnalysisResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTechniqueAnalysisResponse) ProtoMessage() {}

func (x *UpdateTechniqueAnalysisResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_innovation_minning_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTechniqueAnalysisResponse.ProtoReflect.Descriptor instead.
func (*UpdateTechniqueAnalysisResponse) Descriptor() ([]byte, []int) {
	return file_npool_innovation_minning_proto_rawDescGZIP(), []int{15}
}

func (x *UpdateTechniqueAnalysisResponse) GetInfo() *TechniqueAnalysis {
	if x != nil {
		return x.Info
	}
	return nil
}

type TrendAnalysis struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID        string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
	ProjectID string `protobuf:"bytes,20,opt,name=ProjectID,proto3" json:"ProjectID,omitempty"`
	AuthorID  string `protobuf:"bytes,30,opt,name=AuthorID,proto3" json:"AuthorID,omitempty"`
	Title     string `protobuf:"bytes,40,opt,name=Title,proto3" json:"Title,omitempty"`
	Content   string `protobuf:"bytes,50,opt,name=Content,proto3" json:"Content,omitempty"`
	CreateAt  string `protobuf:"bytes,60,opt,name=CreateAt,proto3" json:"CreateAt,omitempty"`
}

func (x *TrendAnalysis) Reset() {
	*x = TrendAnalysis{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_innovation_minning_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrendAnalysis) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrendAnalysis) ProtoMessage() {}

func (x *TrendAnalysis) ProtoReflect() protoreflect.Message {
	mi := &file_npool_innovation_minning_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrendAnalysis.ProtoReflect.Descriptor instead.
func (*TrendAnalysis) Descriptor() ([]byte, []int) {
	return file_npool_innovation_minning_proto_rawDescGZIP(), []int{16}
}

func (x *TrendAnalysis) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *TrendAnalysis) GetProjectID() string {
	if x != nil {
		return x.ProjectID
	}
	return ""
}

func (x *TrendAnalysis) GetAuthorID() string {
	if x != nil {
		return x.AuthorID
	}
	return ""
}

func (x *TrendAnalysis) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *TrendAnalysis) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *TrendAnalysis) GetCreateAt() string {
	if x != nil {
		return x.CreateAt
	}
	return ""
}

type CreateTrendAnalysisRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *TrendAnalysis `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateTrendAnalysisRequest) Reset() {
	*x = CreateTrendAnalysisRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_innovation_minning_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTrendAnalysisRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTrendAnalysisRequest) ProtoMessage() {}

func (x *CreateTrendAnalysisRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_innovation_minning_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTrendAnalysisRequest.ProtoReflect.Descriptor instead.
func (*CreateTrendAnalysisRequest) Descriptor() ([]byte, []int) {
	return file_npool_innovation_minning_proto_rawDescGZIP(), []int{17}
}

func (x *CreateTrendAnalysisRequest) GetInfo() *TrendAnalysis {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreateTrendAnalysisResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *TrendAnalysis `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateTrendAnalysisResponse) Reset() {
	*x = CreateTrendAnalysisResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_innovation_minning_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTrendAnalysisResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTrendAnalysisResponse) ProtoMessage() {}

func (x *CreateTrendAnalysisResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_innovation_minning_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTrendAnalysisResponse.ProtoReflect.Descriptor instead.
func (*CreateTrendAnalysisResponse) Descriptor() ([]byte, []int) {
	return file_npool_innovation_minning_proto_rawDescGZIP(), []int{18}
}

func (x *CreateTrendAnalysisResponse) GetInfo() *TrendAnalysis {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateTrendAnalysisRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *TrendAnalysis `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateTrendAnalysisRequest) Reset() {
	*x = UpdateTrendAnalysisRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_innovation_minning_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTrendAnalysisRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTrendAnalysisRequest) ProtoMessage() {}

func (x *UpdateTrendAnalysisRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_innovation_minning_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTrendAnalysisRequest.ProtoReflect.Descriptor instead.
func (*UpdateTrendAnalysisRequest) Descriptor() ([]byte, []int) {
	return file_npool_innovation_minning_proto_rawDescGZIP(), []int{19}
}

func (x *UpdateTrendAnalysisRequest) GetInfo() *TrendAnalysis {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateTrendAnalysisResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *TrendAnalysis `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateTrendAnalysisResponse) Reset() {
	*x = UpdateTrendAnalysisResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_innovation_minning_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTrendAnalysisResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTrendAnalysisResponse) ProtoMessage() {}

func (x *UpdateTrendAnalysisResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_innovation_minning_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTrendAnalysisResponse.ProtoReflect.Descriptor instead.
func (*UpdateTrendAnalysisResponse) Descriptor() ([]byte, []int) {
	return file_npool_innovation_minning_proto_rawDescGZIP(), []int{20}
}

func (x *UpdateTrendAnalysisResponse) GetInfo() *TrendAnalysis {
	if x != nil {
		return x.Info
	}
	return nil
}

type Capital struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID           string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
	Name         string `protobuf:"bytes,20,opt,name=Name,proto3" json:"Name,omitempty"`
	Introduction string `protobuf:"bytes,30,opt,name=Introduction,proto3" json:"Introduction,omitempty"`
	Logo         string `protobuf:"bytes,40,opt,name=Logo,proto3" json:"Logo,omitempty"`
}

func (x *Capital) Reset() {
	*x = Capital{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_innovation_minning_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Capital) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Capital) ProtoMessage() {}

func (x *Capital) ProtoReflect() protoreflect.Message {
	mi := &file_npool_innovation_minning_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Capital.ProtoReflect.Descriptor instead.
func (*Capital) Descriptor() ([]byte, []int) {
	return file_npool_innovation_minning_proto_rawDescGZIP(), []int{21}
}

func (x *Capital) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Capital) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Capital) GetIntroduction() string {
	if x != nil {
		return x.Introduction
	}
	return ""
}

func (x *Capital) GetLogo() string {
	if x != nil {
		return x.Logo
	}
	return ""
}

type CreateCapitalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Capital `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateCapitalRequest) Reset() {
	*x = CreateCapitalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_innovation_minning_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCapitalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCapitalRequest) ProtoMessage() {}

func (x *CreateCapitalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_innovation_minning_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCapitalRequest.ProtoReflect.Descriptor instead.
func (*CreateCapitalRequest) Descriptor() ([]byte, []int) {
	return file_npool_innovation_minning_proto_rawDescGZIP(), []int{22}
}

func (x *CreateCapitalRequest) GetInfo() *Capital {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreateCapitalResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Capital `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateCapitalResponse) Reset() {
	*x = CreateCapitalResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_innovation_minning_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCapitalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCapitalResponse) ProtoMessage() {}

func (x *CreateCapitalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_innovation_minning_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCapitalResponse.ProtoReflect.Descriptor instead.
func (*CreateCapitalResponse) Descriptor() ([]byte, []int) {
	return file_npool_innovation_minning_proto_rawDescGZIP(), []int{23}
}

func (x *CreateCapitalResponse) GetInfo() *Capital {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateCapitalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Capital `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateCapitalRequest) Reset() {
	*x = UpdateCapitalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_innovation_minning_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCapitalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCapitalRequest) ProtoMessage() {}

func (x *UpdateCapitalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_innovation_minning_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCapitalRequest.ProtoReflect.Descriptor instead.
func (*UpdateCapitalRequest) Descriptor() ([]byte, []int) {
	return file_npool_innovation_minning_proto_rawDescGZIP(), []int{24}
}

func (x *UpdateCapitalRequest) GetInfo() *Capital {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateCapitalResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Capital `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateCapitalResponse) Reset() {
	*x = UpdateCapitalResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_innovation_minning_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCapitalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCapitalResponse) ProtoMessage() {}

func (x *UpdateCapitalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_innovation_minning_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCapitalResponse.ProtoReflect.Descriptor instead.
func (*UpdateCapitalResponse) Descriptor() ([]byte, []int) {
	return file_npool_innovation_minning_proto_rawDescGZIP(), []int{25}
}

func (x *UpdateCapitalResponse) GetInfo() *Capital {
	if x != nil {
		return x.Info
	}
	return nil
}

type Project struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID           string   `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
	Name         string   `protobuf:"bytes,20,opt,name=Name,proto3" json:"Name,omitempty"`
	GoodID       string   `protobuf:"bytes,30,opt,name=GoodID,proto3" json:"GoodID,omitempty"`
	TeamID       string   `protobuf:"bytes,40,opt,name=TeamID,proto3" json:"TeamID,omitempty"`
	CapitalIDs   []string `protobuf:"bytes,50,rep,name=CapitalIDs,proto3" json:"CapitalIDs,omitempty"`
	Introduction string   `protobuf:"bytes,60,opt,name=Introduction,proto3" json:"Introduction,omitempty"`
	Logo         string   `protobuf:"bytes,70,opt,name=Logo,proto3" json:"Logo,omitempty"`
}

func (x *Project) Reset() {
	*x = Project{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_innovation_minning_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Project) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Project) ProtoMessage() {}

func (x *Project) ProtoReflect() protoreflect.Message {
	mi := &file_npool_innovation_minning_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Project.ProtoReflect.Descriptor instead.
func (*Project) Descriptor() ([]byte, []int) {
	return file_npool_innovation_minning_proto_rawDescGZIP(), []int{26}
}

func (x *Project) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Project) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Project) GetGoodID() string {
	if x != nil {
		return x.GoodID
	}
	return ""
}

func (x *Project) GetTeamID() string {
	if x != nil {
		return x.TeamID
	}
	return ""
}

func (x *Project) GetCapitalIDs() []string {
	if x != nil {
		return x.CapitalIDs
	}
	return nil
}

func (x *Project) GetIntroduction() string {
	if x != nil {
		return x.Introduction
	}
	return ""
}

func (x *Project) GetLogo() string {
	if x != nil {
		return x.Logo
	}
	return ""
}

type CreateProjectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Project `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateProjectRequest) Reset() {
	*x = CreateProjectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_innovation_minning_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateProjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProjectRequest) ProtoMessage() {}

func (x *CreateProjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_innovation_minning_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProjectRequest.ProtoReflect.Descriptor instead.
func (*CreateProjectRequest) Descriptor() ([]byte, []int) {
	return file_npool_innovation_minning_proto_rawDescGZIP(), []int{27}
}

func (x *CreateProjectRequest) GetInfo() *Project {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreateProjectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Project `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateProjectResponse) Reset() {
	*x = CreateProjectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_innovation_minning_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateProjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProjectResponse) ProtoMessage() {}

func (x *CreateProjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_innovation_minning_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProjectResponse.ProtoReflect.Descriptor instead.
func (*CreateProjectResponse) Descriptor() ([]byte, []int) {
	return file_npool_innovation_minning_proto_rawDescGZIP(), []int{28}
}

func (x *CreateProjectResponse) GetInfo() *Project {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateProjectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Project `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateProjectRequest) Reset() {
	*x = UpdateProjectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_innovation_minning_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateProjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProjectRequest) ProtoMessage() {}

func (x *UpdateProjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_innovation_minning_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProjectRequest.ProtoReflect.Descriptor instead.
func (*UpdateProjectRequest) Descriptor() ([]byte, []int) {
	return file_npool_innovation_minning_proto_rawDescGZIP(), []int{29}
}

func (x *UpdateProjectRequest) GetInfo() *Project {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateProjectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Project `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateProjectResponse) Reset() {
	*x = UpdateProjectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_innovation_minning_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateProjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProjectResponse) ProtoMessage() {}

func (x *UpdateProjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_innovation_minning_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProjectResponse.ProtoReflect.Descriptor instead.
func (*UpdateProjectResponse) Descriptor() ([]byte, []int) {
	return file_npool_innovation_minning_proto_rawDescGZIP(), []int{30}
}

func (x *UpdateProjectResponse) GetInfo() *Project {
	if x != nil {
		return x.Info
	}
	return nil
}

type LaunchTime struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID             string `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
	ProjectID      string `protobuf:"bytes,20,opt,name=ProjectID,proto3" json:"ProjectID,omitempty"`
	NetworkName    string `protobuf:"bytes,30,opt,name=NetworkName,proto3" json:"NetworkName,omitempty"`
	NetworkVersion string `protobuf:"bytes,40,opt,name=NetworkVersion,proto3" json:"NetworkVersion,omitempty"`
	Introduction   string `protobuf:"bytes,50,opt,name=Introduction,proto3" json:"Introduction,omitempty"`
	LaunchTime     uint32 `protobuf:"varint,60,opt,name=LaunchTime,proto3" json:"LaunchTime,omitempty"`
	Incentive      bool   `protobuf:"varint,70,opt,name=Incentive,proto3" json:"Incentive,omitempty"`
	IncentiveTotal uint32 `protobuf:"varint,80,opt,name=IncentiveTotal,proto3" json:"IncentiveTotal,omitempty"`
}

func (x *LaunchTime) Reset() {
	*x = LaunchTime{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_innovation_minning_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LaunchTime) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LaunchTime) ProtoMessage() {}

func (x *LaunchTime) ProtoReflect() protoreflect.Message {
	mi := &file_npool_innovation_minning_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LaunchTime.ProtoReflect.Descriptor instead.
func (*LaunchTime) Descriptor() ([]byte, []int) {
	return file_npool_innovation_minning_proto_rawDescGZIP(), []int{31}
}

func (x *LaunchTime) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *LaunchTime) GetProjectID() string {
	if x != nil {
		return x.ProjectID
	}
	return ""
}

func (x *LaunchTime) GetNetworkName() string {
	if x != nil {
		return x.NetworkName
	}
	return ""
}

func (x *LaunchTime) GetNetworkVersion() string {
	if x != nil {
		return x.NetworkVersion
	}
	return ""
}

func (x *LaunchTime) GetIntroduction() string {
	if x != nil {
		return x.Introduction
	}
	return ""
}

func (x *LaunchTime) GetLaunchTime() uint32 {
	if x != nil {
		return x.LaunchTime
	}
	return 0
}

func (x *LaunchTime) GetIncentive() bool {
	if x != nil {
		return x.Incentive
	}
	return false
}

func (x *LaunchTime) GetIncentiveTotal() uint32 {
	if x != nil {
		return x.IncentiveTotal
	}
	return 0
}

type CreateLaunchTimeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *LaunchTime `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateLaunchTimeRequest) Reset() {
	*x = CreateLaunchTimeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_innovation_minning_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLaunchTimeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLaunchTimeRequest) ProtoMessage() {}

func (x *CreateLaunchTimeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_innovation_minning_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLaunchTimeRequest.ProtoReflect.Descriptor instead.
func (*CreateLaunchTimeRequest) Descriptor() ([]byte, []int) {
	return file_npool_innovation_minning_proto_rawDescGZIP(), []int{32}
}

func (x *CreateLaunchTimeRequest) GetInfo() *LaunchTime {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreateLaunchTimeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *LaunchTime `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateLaunchTimeResponse) Reset() {
	*x = CreateLaunchTimeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_innovation_minning_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLaunchTimeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLaunchTimeResponse) ProtoMessage() {}

func (x *CreateLaunchTimeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_innovation_minning_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLaunchTimeResponse.ProtoReflect.Descriptor instead.
func (*CreateLaunchTimeResponse) Descriptor() ([]byte, []int) {
	return file_npool_innovation_minning_proto_rawDescGZIP(), []int{33}
}

func (x *CreateLaunchTimeResponse) GetInfo() *LaunchTime {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateLaunchTimeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *LaunchTime `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateLaunchTimeRequest) Reset() {
	*x = UpdateLaunchTimeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_innovation_minning_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateLaunchTimeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLaunchTimeRequest) ProtoMessage() {}

func (x *UpdateLaunchTimeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_innovation_minning_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLaunchTimeRequest.ProtoReflect.Descriptor instead.
func (*UpdateLaunchTimeRequest) Descriptor() ([]byte, []int) {
	return file_npool_innovation_minning_proto_rawDescGZIP(), []int{34}
}

func (x *UpdateLaunchTimeRequest) GetInfo() *LaunchTime {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateLaunchTimeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *LaunchTime `protobuf:"bytes,10,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateLaunchTimeResponse) Reset() {
	*x = UpdateLaunchTimeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_innovation_minning_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateLaunchTimeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLaunchTimeResponse) ProtoMessage() {}

func (x *UpdateLaunchTimeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_innovation_minning_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLaunchTimeResponse.ProtoReflect.Descriptor instead.
func (*UpdateLaunchTimeResponse) Descriptor() ([]byte, []int) {
	return file_npool_innovation_minning_proto_rawDescGZIP(), []int{35}
}

func (x *UpdateLaunchTimeResponse) GetInfo() *LaunchTime {
	if x != nil {
		return x.Info
	}
	return nil
}

var File_npool_innovation_minning_proto protoreflect.FileDescriptor

var file_npool_innovation_minning_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x69, 0x6e, 0x6e, 0x6f, 0x76, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2d, 0x6d, 0x69, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x15, 0x69, 0x6e, 0x6e, 0x6f, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x6d, 0x69, 0x6e,
	0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x25, 0x0a, 0x0f, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x74, 0x0a, 0x04, 0x55, 0x73, 0x65,
	0x72, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49,
	0x44, 0x12, 0x1c, 0x0a, 0x09, 0x46, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x46, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x4c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x4c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x49,
	0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x28, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x49, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x44, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x69, 0x6e, 0x6e, 0x6f, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x6d, 0x69, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x45, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x04, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x69, 0x6e, 0x6e, 0x6f,
	0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x6d, 0x69, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x44, 0x0a, 0x11,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x2f, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x69, 0x6e, 0x6e, 0x6f, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x6d, 0x69, 0x6e,
	0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0x45, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x69, 0x6e, 0x6e, 0x6f, 0x76, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x6d, 0x69, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x80, 0x01, 0x0a, 0x04, 0x54, 0x65,
	0x61, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x54, 0x65, 0x61, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x54, 0x65, 0x61, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x4c, 0x6f, 0x67, 0x6f, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4c, 0x6f,
	0x67, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x49, 0x44, 0x18, 0x28,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1c,
	0x0a, 0x09, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x44, 0x73, 0x18, 0x32, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x09, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x44, 0x73, 0x22, 0x44, 0x0a, 0x11,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x2f, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x69, 0x6e, 0x6e, 0x6f, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x6d, 0x69, 0x6e,
	0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x04, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0x45, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x61, 0x6d,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x69, 0x6e, 0x6e, 0x6f, 0x76, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x6d, 0x69, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x54,
	0x65, 0x61, 0x6d, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x44, 0x0a, 0x11, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f,
	0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x69,
	0x6e, 0x6e, 0x6f, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x6d, 0x69, 0x6e, 0x6e, 0x69, 0x6e,
	0x67, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22,
	0x45, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x69, 0x6e, 0x6e, 0x6f, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x6d, 0x69, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x61, 0x6d,
	0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xa9, 0x01, 0x0a, 0x11, 0x54, 0x65, 0x63, 0x68, 0x6e,
	0x69, 0x71, 0x75, 0x65, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x12, 0x0e, 0x0a, 0x02,
	0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08,
	0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x49, 0x44, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x41, 0x74, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x41, 0x74, 0x22, 0x5e, 0x0a, 0x1e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x63, 0x68,
	0x6e, 0x69, 0x71, 0x75, 0x65, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x69, 0x6e, 0x6e, 0x6f, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x6d, 0x69, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x63, 0x68, 0x6e,
	0x69, 0x71, 0x75, 0x65, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x52, 0x04, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0x5f, 0x0a, 0x1f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x63, 0x68,
	0x6e, 0x69, 0x71, 0x75, 0x65, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x69, 0x6e, 0x6e, 0x6f, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x6d, 0x69, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x63, 0x68,
	0x6e, 0x69, 0x71, 0x75, 0x65, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x52, 0x04, 0x49,
	0x6e, 0x66, 0x6f, 0x22, 0x5e, 0x0a, 0x1e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x63,
	0x68, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x69, 0x6e, 0x6e, 0x6f, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x6d, 0x69, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x63, 0x68,
	0x6e, 0x69, 0x71, 0x75, 0x65, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x52, 0x04, 0x49,
	0x6e, 0x66, 0x6f, 0x22, 0x5f, 0x0a, 0x1f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x63,
	0x68, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x69, 0x6e, 0x6e, 0x6f, 0x76, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x6d, 0x69, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x63,
	0x68, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x52, 0x04,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0xa5, 0x01, 0x0a, 0x0d, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x41, 0x6e,
	0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x44,
	0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x44,
	0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x18, 0x3c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x22, 0x56, 0x0a, 0x1a,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x41, 0x6e, 0x61, 0x6c, 0x79,
	0x73, 0x69, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x04, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x69, 0x6e, 0x6e, 0x6f, 0x76,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x6d, 0x69, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31,
	0x2e, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x52, 0x04,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0x57, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x72,
	0x65, 0x6e, 0x64, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x69, 0x6e, 0x6e, 0x6f, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x6d,
	0x69, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x41,
	0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x56, 0x0a,
	0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x41, 0x6e, 0x61, 0x6c,
	0x79, 0x73, 0x69, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x04, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x69, 0x6e, 0x6e, 0x6f,
	0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x6d, 0x69, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x76,
	0x31, 0x2e, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x52,
	0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x57, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x72, 0x65, 0x6e, 0x64, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x69, 0x6e, 0x6e, 0x6f, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x6d, 0x69, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x65, 0x6e, 0x64,
	0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x65,
	0x0a, 0x07, 0x43, 0x61, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a,
	0x0c, 0x49, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x1e, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x49, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x12, 0x0a, 0x04, 0x4c, 0x6f, 0x67, 0x6f, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x4c, 0x6f, 0x67, 0x6f, 0x22, 0x4a, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43,
	0x61, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a,
	0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x69, 0x6e,
	0x6e, 0x6f, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x6d, 0x69, 0x6e, 0x6e, 0x69, 0x6e, 0x67,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x52, 0x04, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0x4b, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x70, 0x69, 0x74,
	0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x04, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x69, 0x6e, 0x6e, 0x6f, 0x76,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x6d, 0x69, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x61, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x4a,
	0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x69, 0x6e, 0x6e, 0x6f, 0x76, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x6d, 0x69, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x70,
	0x69, 0x74, 0x61, 0x6c, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x4b, 0x0a, 0x15, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x69, 0x6e, 0x6e, 0x6f, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x6d,
	0x69, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x70, 0x69, 0x74, 0x61,
	0x6c, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xb5, 0x01, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x47, 0x6f, 0x6f, 0x64, 0x49,
	0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x47, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x12,
	0x16, 0x0a, 0x06, 0x54, 0x65, 0x61, 0x6d, 0x49, 0x44, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x54, 0x65, 0x61, 0x6d, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x61, 0x70, 0x69, 0x74,
	0x61, 0x6c, 0x49, 0x44, 0x73, 0x18, 0x32, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x61, 0x70,
	0x69, 0x74, 0x61, 0x6c, 0x49, 0x44, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x49, 0x6e, 0x74, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x49,
	0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x4c,
	0x6f, 0x67, 0x6f, 0x18, 0x46, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4c, 0x6f, 0x67, 0x6f, 0x22,
	0x4a, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x69, 0x6e, 0x6e, 0x6f, 0x76, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x6d, 0x69, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x4b, 0x0a, 0x15, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x69, 0x6e, 0x6e, 0x6f, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x6d, 0x69, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x4a, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x32, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x69, 0x6e, 0x6e, 0x6f, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x6d, 0x69, 0x6e, 0x6e,
	0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x04,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0x4b, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a,
	0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x69, 0x6e,
	0x6e, 0x6f, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x6d, 0x69, 0x6e, 0x6e, 0x69, 0x6e, 0x67,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x04, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0x8e, 0x02, 0x0a, 0x0a, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44,
	0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x12, 0x20,
	0x0a, 0x0b, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x1e, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x26, 0x0a, 0x0e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x49, 0x6e, 0x74, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x49, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a,
	0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0a, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x49, 0x6e, 0x63, 0x65, 0x6e, 0x74, 0x69, 0x76, 0x65, 0x18, 0x46, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x09, 0x49, 0x6e, 0x63, 0x65, 0x6e, 0x74, 0x69, 0x76, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x49, 0x6e,
	0x63, 0x65, 0x6e, 0x74, 0x69, 0x76, 0x65, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x50, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0e, 0x49, 0x6e, 0x63, 0x65, 0x6e, 0x74, 0x69, 0x76, 0x65, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x22, 0x50, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x61, 0x75, 0x6e,
	0x63, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a,
	0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x69, 0x6e,
	0x6e, 0x6f, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x6d, 0x69, 0x6e, 0x6e, 0x69, 0x6e, 0x67,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x04,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0x51, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x61,
	0x75, 0x6e, 0x63, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x35, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x69, 0x6e, 0x6e, 0x6f, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x6d, 0x69, 0x6e, 0x6e,
	0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x54, 0x69, 0x6d,
	0x65, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x50, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x35, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x69, 0x6e, 0x6e, 0x6f, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x6d, 0x69,
	0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x54,
	0x69, 0x6d, 0x65, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x51, 0x0a, 0x18, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x69, 0x6e, 0x6e, 0x6f, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x6d, 0x69, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x61, 0x75, 0x6e,
	0x63, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x32, 0x85, 0x11, 0x0a,
	0x11, 0x49, 0x6e, 0x6e, 0x6f, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x69, 0x6e, 0x6e, 0x69,
	0x6e, 0x67, 0x12, 0x5e, 0x0a, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x26, 0x2e, 0x69, 0x6e, 0x6e, 0x6f, 0x76, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x6d, 0x69, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x13, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x0d, 0x22, 0x08, 0x2f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x3a,
	0x01, 0x2a, 0x12, 0x7d, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x12, 0x28, 0x2e, 0x69, 0x6e, 0x6e, 0x6f, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x6d, 0x69,
	0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x69, 0x6e, 0x6e,
	0x6f, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x6d, 0x69, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x22, 0x0f, 0x2f,
	0x76, 0x31, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x3a, 0x01,
	0x2a, 0x12, 0x7d, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12,
	0x28, 0x2e, 0x69, 0x6e, 0x6e, 0x6f, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x6d, 0x69, 0x6e,
	0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x69, 0x6e, 0x6e, 0x6f,
	0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x6d, 0x69, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x22, 0x0f, 0x2f, 0x76,
	0x31, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x3a, 0x01, 0x2a,
	0x12, 0x7d, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x12, 0x28,
	0x2e, 0x69, 0x6e, 0x6e, 0x6f, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x6d, 0x69, 0x6e, 0x6e,
	0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x61,
	0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x69, 0x6e, 0x6e, 0x6f, 0x76,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x6d, 0x69, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x22, 0x0f, 0x2f, 0x76, 0x31,
	0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x2f, 0x74, 0x65, 0x61, 0x6d, 0x3a, 0x01, 0x2a, 0x12,
	0x7d, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x12, 0x28, 0x2e,
	0x69, 0x6e, 0x6e, 0x6f, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x6d, 0x69, 0x6e, 0x6e, 0x69,
	0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x61, 0x6d,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x69, 0x6e, 0x6e, 0x6f, 0x76, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x6d, 0x69, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x22, 0x0f, 0x2f, 0x76, 0x31, 0x2f,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x74, 0x65, 0x61, 0x6d, 0x3a, 0x01, 0x2a, 0x12, 0xb2,
	0x01, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x63, 0x68, 0x6e, 0x69, 0x71,
	0x75, 0x65, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x12, 0x35, 0x2e, 0x69, 0x6e, 0x6e,
	0x6f, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x6d, 0x69, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x63, 0x68, 0x6e, 0x69, 0x71,
	0x75, 0x65, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x36, 0x2e, 0x69, 0x6e, 0x6e, 0x6f, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x6d,
	0x69, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x65, 0x63, 0x68, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x28, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x22, 0x22, 0x1d, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x2f, 0x74, 0x65,
	0x63, 0x68, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x2f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73,
	0x3a, 0x01, 0x2a, 0x12, 0xb2, 0x01, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65,
	0x63, 0x68, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x12,
	0x35, 0x2e, 0x69, 0x6e, 0x6e, 0x6f, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x6d, 0x69, 0x6e,
	0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65,
	0x63, 0x68, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x69, 0x6e, 0x6e, 0x6f, 0x76, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x6d, 0x69, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x63, 0x68, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x41, 0x6e,
	0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x28,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x22, 0x1d, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x2f, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x2f, 0x61, 0x6e, 0x61,
	0x6c, 0x79, 0x73, 0x69, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0xa2, 0x01, 0x0a, 0x13, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73,
	0x12, 0x31, 0x2e, 0x69, 0x6e, 0x6e, 0x6f, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x6d, 0x69,
	0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x72, 0x65, 0x6e, 0x64, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x69, 0x6e, 0x6e, 0x6f, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x6d, 0x69, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x22,
	0x19, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x2f, 0x74, 0x72, 0x65, 0x6e,
	0x64, 0x2f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0xa2, 0x01,
	0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x41, 0x6e, 0x61,
	0x6c, 0x79, 0x73, 0x69, 0x73, 0x12, 0x31, 0x2e, 0x69, 0x6e, 0x6e, 0x6f, 0x76, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x6d, 0x69, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x69, 0x6e, 0x6e, 0x6f, 0x76,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x6d, 0x69, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x41, 0x6e, 0x61, 0x6c,
	0x79, 0x73, 0x69, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x24, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x1e, 0x22, 0x19, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x2f, 0x74, 0x72, 0x65, 0x6e, 0x64, 0x2f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x3a,
	0x01, 0x2a, 0x12, 0x89, 0x01, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x70,
	0x69, 0x74, 0x61, 0x6c, 0x12, 0x2b, 0x2e, 0x69, 0x6e, 0x6e, 0x6f, 0x76, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x6d, 0x69, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x43, 0x61, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2c, 0x2e, 0x69, 0x6e, 0x6e, 0x6f, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x6d,
	0x69, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x43, 0x61, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x22, 0x12, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x2f, 0x63, 0x61, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x3a, 0x01, 0x2a, 0x12, 0x89,
	0x01, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x70, 0x69, 0x74, 0x61, 0x6c,
	0x12, 0x2b, 0x2e, 0x69, 0x6e, 0x6e, 0x6f, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x6d, 0x69,
	0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43,
	0x61, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e,
	0x69, 0x6e, 0x6e, 0x6f, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x6d, 0x69, 0x6e, 0x6e, 0x69,
	0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x70, 0x69,
	0x74, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1d, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x17, 0x22, 0x12, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2f,
	0x63, 0x61, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x3a, 0x01, 0x2a, 0x12, 0x89, 0x01, 0x0a, 0x0d, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x2b, 0x2e, 0x69,
	0x6e, 0x6e, 0x6f, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x6d, 0x69, 0x6e, 0x6e, 0x69, 0x6e,
	0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x69, 0x6e, 0x6e, 0x6f,
	0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x6d, 0x69, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x22,
	0x12, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0x89, 0x01, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x2b, 0x2e, 0x69, 0x6e, 0x6e, 0x6f, 0x76,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x6d, 0x69, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x69, 0x6e, 0x6e, 0x6f, 0x76, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x6d, 0x69, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x22, 0x12, 0x2f, 0x76, 0x31,
	0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x3a,
	0x01, 0x2a, 0x12, 0x96, 0x01, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x61, 0x75,
	0x6e, 0x63, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2e, 0x2e, 0x69, 0x6e, 0x6e, 0x6f, 0x76, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x6d, 0x69, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x54, 0x69, 0x6d, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x69, 0x6e, 0x6e, 0x6f, 0x76, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x6d, 0x69, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x54, 0x69, 0x6d, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b,
	0x22, 0x16, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x2f, 0x6c, 0x61, 0x75,
	0x6e, 0x63, 0x68, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x96, 0x01, 0x0a, 0x10,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x2e, 0x2e, 0x69, 0x6e, 0x6e, 0x6f, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x6d, 0x69,
	0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c,
	0x61, 0x75, 0x6e, 0x63, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2f, 0x2e, 0x69, 0x6e, 0x6e, 0x6f, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x6d, 0x69,
	0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c,
	0x61, 0x75, 0x6e, 0x63, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x22, 0x16, 0x2f, 0x76, 0x31, 0x2f, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x6c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x2f, 0x74, 0x69, 0x6d,
	0x65, 0x3a, 0x01, 0x2a, 0x42, 0x3a, 0x5a, 0x38, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x4e, 0x70, 0x6f, 0x6f, 0x6c, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x2f, 0x69, 0x6e, 0x6e, 0x6f, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x6d, 0x69, 0x6e, 0x69,
	0x6e, 0x67, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x6e, 0x70, 0x6f, 0x6f, 0x6c,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_npool_innovation_minning_proto_rawDescOnce sync.Once
	file_npool_innovation_minning_proto_rawDescData = file_npool_innovation_minning_proto_rawDesc
)

func file_npool_innovation_minning_proto_rawDescGZIP() []byte {
	file_npool_innovation_minning_proto_rawDescOnce.Do(func() {
		file_npool_innovation_minning_proto_rawDescData = protoimpl.X.CompressGZIP(file_npool_innovation_minning_proto_rawDescData)
	})
	return file_npool_innovation_minning_proto_rawDescData
}

var file_npool_innovation_minning_proto_msgTypes = make([]protoimpl.MessageInfo, 36)
var file_npool_innovation_minning_proto_goTypes = []interface{}{
	(*VersionResponse)(nil),                 // 0: innovation.minning.v1.VersionResponse
	(*User)(nil),                            // 1: innovation.minning.v1.User
	(*CreateUserRequest)(nil),               // 2: innovation.minning.v1.CreateUserRequest
	(*CreateUserResponse)(nil),              // 3: innovation.minning.v1.CreateUserResponse
	(*UpdateUserRequest)(nil),               // 4: innovation.minning.v1.UpdateUserRequest
	(*UpdateUserResponse)(nil),              // 5: innovation.minning.v1.UpdateUserResponse
	(*Team)(nil),                            // 6: innovation.minning.v1.Team
	(*CreateTeamRequest)(nil),               // 7: innovation.minning.v1.CreateTeamRequest
	(*CreateTeamResponse)(nil),              // 8: innovation.minning.v1.CreateTeamResponse
	(*UpdateTeamRequest)(nil),               // 9: innovation.minning.v1.UpdateTeamRequest
	(*UpdateTeamResponse)(nil),              // 10: innovation.minning.v1.UpdateTeamResponse
	(*TechniqueAnalysis)(nil),               // 11: innovation.minning.v1.TechniqueAnalysis
	(*CreateTechniqueAnalysisRequest)(nil),  // 12: innovation.minning.v1.CreateTechniqueAnalysisRequest
	(*CreateTechniqueAnalysisResponse)(nil), // 13: innovation.minning.v1.CreateTechniqueAnalysisResponse
	(*UpdateTechniqueAnalysisRequest)(nil),  // 14: innovation.minning.v1.UpdateTechniqueAnalysisRequest
	(*UpdateTechniqueAnalysisResponse)(nil), // 15: innovation.minning.v1.UpdateTechniqueAnalysisResponse
	(*TrendAnalysis)(nil),                   // 16: innovation.minning.v1.TrendAnalysis
	(*CreateTrendAnalysisRequest)(nil),      // 17: innovation.minning.v1.CreateTrendAnalysisRequest
	(*CreateTrendAnalysisResponse)(nil),     // 18: innovation.minning.v1.CreateTrendAnalysisResponse
	(*UpdateTrendAnalysisRequest)(nil),      // 19: innovation.minning.v1.UpdateTrendAnalysisRequest
	(*UpdateTrendAnalysisResponse)(nil),     // 20: innovation.minning.v1.UpdateTrendAnalysisResponse
	(*Capital)(nil),                         // 21: innovation.minning.v1.Capital
	(*CreateCapitalRequest)(nil),            // 22: innovation.minning.v1.CreateCapitalRequest
	(*CreateCapitalResponse)(nil),           // 23: innovation.minning.v1.CreateCapitalResponse
	(*UpdateCapitalRequest)(nil),            // 24: innovation.minning.v1.UpdateCapitalRequest
	(*UpdateCapitalResponse)(nil),           // 25: innovation.minning.v1.UpdateCapitalResponse
	(*Project)(nil),                         // 26: innovation.minning.v1.Project
	(*CreateProjectRequest)(nil),            // 27: innovation.minning.v1.CreateProjectRequest
	(*CreateProjectResponse)(nil),           // 28: innovation.minning.v1.CreateProjectResponse
	(*UpdateProjectRequest)(nil),            // 29: innovation.minning.v1.UpdateProjectRequest
	(*UpdateProjectResponse)(nil),           // 30: innovation.minning.v1.UpdateProjectResponse
	(*LaunchTime)(nil),                      // 31: innovation.minning.v1.LaunchTime
	(*CreateLaunchTimeRequest)(nil),         // 32: innovation.minning.v1.CreateLaunchTimeRequest
	(*CreateLaunchTimeResponse)(nil),        // 33: innovation.minning.v1.CreateLaunchTimeResponse
	(*UpdateLaunchTimeRequest)(nil),         // 34: innovation.minning.v1.UpdateLaunchTimeRequest
	(*UpdateLaunchTimeResponse)(nil),        // 35: innovation.minning.v1.UpdateLaunchTimeResponse
	(*emptypb.Empty)(nil),                   // 36: google.protobuf.Empty
}
var file_npool_innovation_minning_proto_depIdxs = []int32{
	1,  // 0: innovation.minning.v1.CreateUserRequest.Info:type_name -> innovation.minning.v1.User
	1,  // 1: innovation.minning.v1.CreateUserResponse.Info:type_name -> innovation.minning.v1.User
	1,  // 2: innovation.minning.v1.UpdateUserRequest.Info:type_name -> innovation.minning.v1.User
	1,  // 3: innovation.minning.v1.UpdateUserResponse.Info:type_name -> innovation.minning.v1.User
	6,  // 4: innovation.minning.v1.CreateTeamRequest.Info:type_name -> innovation.minning.v1.Team
	6,  // 5: innovation.minning.v1.CreateTeamResponse.Info:type_name -> innovation.minning.v1.Team
	6,  // 6: innovation.minning.v1.UpdateTeamRequest.Info:type_name -> innovation.minning.v1.Team
	6,  // 7: innovation.minning.v1.UpdateTeamResponse.Info:type_name -> innovation.minning.v1.Team
	11, // 8: innovation.minning.v1.CreateTechniqueAnalysisRequest.Info:type_name -> innovation.minning.v1.TechniqueAnalysis
	11, // 9: innovation.minning.v1.CreateTechniqueAnalysisResponse.Info:type_name -> innovation.minning.v1.TechniqueAnalysis
	11, // 10: innovation.minning.v1.UpdateTechniqueAnalysisRequest.Info:type_name -> innovation.minning.v1.TechniqueAnalysis
	11, // 11: innovation.minning.v1.UpdateTechniqueAnalysisResponse.Info:type_name -> innovation.minning.v1.TechniqueAnalysis
	16, // 12: innovation.minning.v1.CreateTrendAnalysisRequest.Info:type_name -> innovation.minning.v1.TrendAnalysis
	16, // 13: innovation.minning.v1.CreateTrendAnalysisResponse.Info:type_name -> innovation.minning.v1.TrendAnalysis
	16, // 14: innovation.minning.v1.UpdateTrendAnalysisRequest.Info:type_name -> innovation.minning.v1.TrendAnalysis
	16, // 15: innovation.minning.v1.UpdateTrendAnalysisResponse.Info:type_name -> innovation.minning.v1.TrendAnalysis
	21, // 16: innovation.minning.v1.CreateCapitalRequest.Info:type_name -> innovation.minning.v1.Capital
	21, // 17: innovation.minning.v1.CreateCapitalResponse.Info:type_name -> innovation.minning.v1.Capital
	21, // 18: innovation.minning.v1.UpdateCapitalRequest.Info:type_name -> innovation.minning.v1.Capital
	21, // 19: innovation.minning.v1.UpdateCapitalResponse.Info:type_name -> innovation.minning.v1.Capital
	26, // 20: innovation.minning.v1.CreateProjectRequest.Info:type_name -> innovation.minning.v1.Project
	26, // 21: innovation.minning.v1.CreateProjectResponse.Info:type_name -> innovation.minning.v1.Project
	26, // 22: innovation.minning.v1.UpdateProjectRequest.Info:type_name -> innovation.minning.v1.Project
	26, // 23: innovation.minning.v1.UpdateProjectResponse.Info:type_name -> innovation.minning.v1.Project
	31, // 24: innovation.minning.v1.CreateLaunchTimeRequest.Info:type_name -> innovation.minning.v1.LaunchTime
	31, // 25: innovation.minning.v1.CreateLaunchTimeResponse.Info:type_name -> innovation.minning.v1.LaunchTime
	31, // 26: innovation.minning.v1.UpdateLaunchTimeRequest.Info:type_name -> innovation.minning.v1.LaunchTime
	31, // 27: innovation.minning.v1.UpdateLaunchTimeResponse.Info:type_name -> innovation.minning.v1.LaunchTime
	36, // 28: innovation.minning.v1.InnovationMinning.Version:input_type -> google.protobuf.Empty
	2,  // 29: innovation.minning.v1.InnovationMinning.CreateUser:input_type -> innovation.minning.v1.CreateUserRequest
	4,  // 30: innovation.minning.v1.InnovationMinning.UpdateUser:input_type -> innovation.minning.v1.UpdateUserRequest
	7,  // 31: innovation.minning.v1.InnovationMinning.CreateTeam:input_type -> innovation.minning.v1.CreateTeamRequest
	9,  // 32: innovation.minning.v1.InnovationMinning.UpdateTeam:input_type -> innovation.minning.v1.UpdateTeamRequest
	12, // 33: innovation.minning.v1.InnovationMinning.CreateTechniqueAnalysis:input_type -> innovation.minning.v1.CreateTechniqueAnalysisRequest
	14, // 34: innovation.minning.v1.InnovationMinning.UpdateTechniqueAnalysis:input_type -> innovation.minning.v1.UpdateTechniqueAnalysisRequest
	17, // 35: innovation.minning.v1.InnovationMinning.CreateTrendAnalysis:input_type -> innovation.minning.v1.CreateTrendAnalysisRequest
	19, // 36: innovation.minning.v1.InnovationMinning.UpdateTrendAnalysis:input_type -> innovation.minning.v1.UpdateTrendAnalysisRequest
	22, // 37: innovation.minning.v1.InnovationMinning.CreateCapital:input_type -> innovation.minning.v1.CreateCapitalRequest
	24, // 38: innovation.minning.v1.InnovationMinning.UpdateCapital:input_type -> innovation.minning.v1.UpdateCapitalRequest
	27, // 39: innovation.minning.v1.InnovationMinning.CreateProject:input_type -> innovation.minning.v1.CreateProjectRequest
	29, // 40: innovation.minning.v1.InnovationMinning.UpdateProject:input_type -> innovation.minning.v1.UpdateProjectRequest
	32, // 41: innovation.minning.v1.InnovationMinning.CreateLaunchTime:input_type -> innovation.minning.v1.CreateLaunchTimeRequest
	34, // 42: innovation.minning.v1.InnovationMinning.UpdateLaunchTime:input_type -> innovation.minning.v1.UpdateLaunchTimeRequest
	0,  // 43: innovation.minning.v1.InnovationMinning.Version:output_type -> innovation.minning.v1.VersionResponse
	3,  // 44: innovation.minning.v1.InnovationMinning.CreateUser:output_type -> innovation.minning.v1.CreateUserResponse
	5,  // 45: innovation.minning.v1.InnovationMinning.UpdateUser:output_type -> innovation.minning.v1.UpdateUserResponse
	8,  // 46: innovation.minning.v1.InnovationMinning.CreateTeam:output_type -> innovation.minning.v1.CreateTeamResponse
	10, // 47: innovation.minning.v1.InnovationMinning.UpdateTeam:output_type -> innovation.minning.v1.UpdateTeamResponse
	13, // 48: innovation.minning.v1.InnovationMinning.CreateTechniqueAnalysis:output_type -> innovation.minning.v1.CreateTechniqueAnalysisResponse
	15, // 49: innovation.minning.v1.InnovationMinning.UpdateTechniqueAnalysis:output_type -> innovation.minning.v1.UpdateTechniqueAnalysisResponse
	18, // 50: innovation.minning.v1.InnovationMinning.CreateTrendAnalysis:output_type -> innovation.minning.v1.CreateTrendAnalysisResponse
	20, // 51: innovation.minning.v1.InnovationMinning.UpdateTrendAnalysis:output_type -> innovation.minning.v1.UpdateTrendAnalysisResponse
	23, // 52: innovation.minning.v1.InnovationMinning.CreateCapital:output_type -> innovation.minning.v1.CreateCapitalResponse
	25, // 53: innovation.minning.v1.InnovationMinning.UpdateCapital:output_type -> innovation.minning.v1.UpdateCapitalResponse
	28, // 54: innovation.minning.v1.InnovationMinning.CreateProject:output_type -> innovation.minning.v1.CreateProjectResponse
	30, // 55: innovation.minning.v1.InnovationMinning.UpdateProject:output_type -> innovation.minning.v1.UpdateProjectResponse
	33, // 56: innovation.minning.v1.InnovationMinning.CreateLaunchTime:output_type -> innovation.minning.v1.CreateLaunchTimeResponse
	35, // 57: innovation.minning.v1.InnovationMinning.UpdateLaunchTime:output_type -> innovation.minning.v1.UpdateLaunchTimeResponse
	43, // [43:58] is the sub-list for method output_type
	28, // [28:43] is the sub-list for method input_type
	28, // [28:28] is the sub-list for extension type_name
	28, // [28:28] is the sub-list for extension extendee
	0,  // [0:28] is the sub-list for field type_name
}

func init() { file_npool_innovation_minning_proto_init() }
func file_npool_innovation_minning_proto_init() {
	if File_npool_innovation_minning_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_npool_innovation_minning_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VersionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_innovation_minning_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_innovation_minning_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_innovation_minning_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_innovation_minning_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_innovation_minning_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_innovation_minning_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Team); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_innovation_minning_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTeamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_innovation_minning_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTeamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_innovation_minning_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTeamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_innovation_minning_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTeamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_innovation_minning_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TechniqueAnalysis); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_innovation_minning_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTechniqueAnalysisRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_innovation_minning_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTechniqueAnalysisResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_innovation_minning_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTechniqueAnalysisRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_innovation_minning_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTechniqueAnalysisResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_innovation_minning_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrendAnalysis); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_innovation_minning_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTrendAnalysisRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_innovation_minning_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTrendAnalysisResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_innovation_minning_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTrendAnalysisRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_innovation_minning_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTrendAnalysisResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_innovation_minning_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Capital); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_innovation_minning_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCapitalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_innovation_minning_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCapitalResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_innovation_minning_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCapitalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_innovation_minning_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCapitalResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_innovation_minning_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Project); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_innovation_minning_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateProjectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_innovation_minning_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateProjectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_innovation_minning_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateProjectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_innovation_minning_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateProjectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_innovation_minning_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LaunchTime); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_innovation_minning_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLaunchTimeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_innovation_minning_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLaunchTimeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_innovation_minning_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateLaunchTimeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_innovation_minning_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateLaunchTimeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_npool_innovation_minning_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   36,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_npool_innovation_minning_proto_goTypes,
		DependencyIndexes: file_npool_innovation_minning_proto_depIdxs,
		MessageInfos:      file_npool_innovation_minning_proto_msgTypes,
	}.Build()
	File_npool_innovation_minning_proto = out.File
	file_npool_innovation_minning_proto_rawDesc = nil
	file_npool_innovation_minning_proto_goTypes = nil
	file_npool_innovation_minning_proto_depIdxs = nil
}
